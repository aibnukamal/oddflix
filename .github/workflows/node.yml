name: Run Unit Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Run Unit Test
    runs-on: ${{matrix.os}}

    strategy:
      max-parallel: 24
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
        redis-version: [4]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: ${{ matrix.redis-version }}

      - name: Setup Postgres database
        uses: Daniel-Marynicz/postgresql-action@master
        with:
          postgres_image_tag: 12-alpine
          app_user: test
          app_user_password: test
          app_db: test_db
          postgres_extensions: uuid-ossp ltree    
    
      - name: Run test
        run: |
          cd movie-gql
          yarn
          yarn test --coverage

      - name: Publish Test Results Frontend
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: 'Frontend test'
          junit_files: 'movie-gql/junit.xml'

      - name: Publish Test Results Backend
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: 'Backend test'
          junit_files: 'backend-test.xml'

      - name: Check test coverage
        uses: terencetcf/github-actions-lcov-minimum-coverage-checker@v1
        with:
          coverage-file: movie-gql/coverage/lcov.info
          minimum-coverage: 50
